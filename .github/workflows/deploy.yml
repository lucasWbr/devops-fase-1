name: CI/CD Pipeline - DevOps na Prática

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  IMAGE_NAME: devops-fase-1
  BUCKET_NAME: devops-fase-1

jobs:
  test:
    name: Executar Testes
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Instalar dependências
        run: npm ci

      - name: Executar testes
        run: npm test

      - name: Validar HTML
        run: npm run validate

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t $IMAGE_NAME:latest .
          docker build -t $IMAGE_NAME:${{ github.sha }} .

      - name: Test Docker image
        run: |
          docker run -d --name test-container -p 8080:80 $IMAGE_NAME:latest
          sleep 5
          curl -f http://localhost:8080 || exit 1
          docker rm -f test-container

      - name: Extract files from Docker image
        run: |
          mkdir -p build-output
          docker run -d --name extract-container $IMAGE_NAME:latest
          docker cp extract-container:/usr/share/nginx/html/. build-output/
          docker rm -f extract-container

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: website-build
          path: build-output/

  deploy:
    name: Deploy to S3
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: website-build
          path: build-output/

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy to S3
        run: |
          aws s3 sync build-output/ s3://$BUCKET_NAME --delete

      - name: Invalidate CloudFront (if configured)
        if: false # Descomentado quando o CloudFront for configurado
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"

      - name: Deploy Success Notification
        run: |
          echo "Deploy realizado com sucesso!"
          echo "Aplicação disponível em: http://$BUCKET_NAME.s3-website-us-east-1.amazonaws.com"
